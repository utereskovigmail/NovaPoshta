// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovaPoshtaParalle;

#nullable disable

namespace NovaPoshtaParalle.Migrations
{
    [DbContext(typeof(MyApplicationContext))]
    [Migration("20250418095611_Init Database")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("NovaPoshtaParalle.Entities.Area", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.ToTable("tblAreas");
                });

            modelBuilder.Entity("NovaPoshtaParalle.Entities.City", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SettlementTypeDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.HasIndex("Area");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("NovaPoshtaParalle.Entities.DepartmentEntity", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityRef")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Ref");

                    b.HasIndex("CityRef");

                    b.ToTable("tblDepartments");
                });

            modelBuilder.Entity("NovaPoshtaParalle.Entities.City", b =>
                {
                    b.HasOne("NovaPoshtaParalle.Entities.Area", "AreaObj")
                        .WithMany()
                        .HasForeignKey("Area")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AreaObj");
                });

            modelBuilder.Entity("NovaPoshtaParalle.Entities.DepartmentEntity", b =>
                {
                    b.HasOne("NovaPoshtaParalle.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
